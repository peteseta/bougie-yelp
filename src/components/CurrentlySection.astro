---
import currently from "../data/currently.json";
---

<div class="currently-section xl:px-0 mx-auto my-2 max-w-3xl px-4 sm:px-6">
  <div class="scroll-row relative py-1">
    <span class="label text-sm font-semibold text-skin-accent">READING</span>
    <div class="scroll-container">
      <div class="fade-edges">
        <div class="scroll-content">
          {
            currently.reading.map((book, index) => (
              <span class="mr-6 text-sm text-skin-base transition-colors hover:text-skin-accent">
                {book.title} - {book.author}
                {index < currently.reading.length - 1 && (
                  <span class="mx-2 opacity-50">•</span>
                )}
              </span>
            ))
          }
          <span class="mx-24 opacity-30">***</span>
          {
            currently.reading.map((book, index) => (
              <span class="mr-6 text-sm text-skin-base transition-colors hover:text-skin-accent">
                {book.title} - {book.author}
                {index < currently.reading.length - 1 && (
                  <span class="mx-2 opacity-50">•</span>
                )}
              </span>
            ))
          }
          <span class="mx-24 opacity-30">***</span>
        </div>
      </div>
    </div>
  </div>

  <div class="scroll-row relative py-1">
    <span class="label text-sm font-semibold text-skin-accent">LISTENING</span
    >
    <div class="scroll-container">
      <div class="fade-edges">
        <div class="scroll-content">
          {
            currently.listening.map((song, index) => (
              <span class="mr-6 text-sm text-skin-base transition-colors hover:text-skin-accent">
                {song.title} - {song.artist} / <em>{song.album}</em>
                {index < currently.listening.length - 1 && (
                  <span class="mx-2 opacity-50">•</span>
                )}
              </span>
            ))
          }
          <span class="mx-24 opacity-30">***</span>
          {
            currently.listening.map((song, index) => (
              <span class="mr-6 text-sm text-skin-base transition-colors hover:text-skin-accent">
                {song.title} - {song.artist} / <em>{song.album}</em>
                {index < currently.listening.length - 1 && (
                  <span class="mx-2 opacity-50">•</span>
                )}
              </span>
            ))
          }
          <span class="mx-24 opacity-30">***</span>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .scroll-row {
    display: flex;
    align-items: center;
    background-color: var(--color-bg);
    gap: 1rem;
  }

  .label {
    flex-shrink: 0;
    z-index: 20;
    position: relative;
  }

  .label::after {
    content: "";
    position: absolute;
    right: -2rem;
    top: 0;
    bottom: 0;
    width: 2rem;
    background: linear-gradient(to right, var(--color-bg), transparent);
  }

  .scroll-container {
    flex-grow: 1;
    overflow: hidden;
    position: relative;
    margin-left: 1rem;
  }

  .fade-edges {
    position: relative;
    overflow: hidden;
  }

  .fade-edges::before,
  .fade-edges::after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    width: 6rem;
    z-index: 10;
    pointer-events: none;
  }

  .fade-edges::before {
    left: 0;
    background: linear-gradient(
      to right,
      var(--color-bg) 0%,
      var(--color-bg) 15%,
      transparent 100%
    );
  }

  .fade-edges::after {
    right: 0;
    background: linear-gradient(
      to left,
      var(--color-bg) 0%,
      var(--color-bg) 15%,
      transparent 100%
    );
  }

  .scroll-content {
    display: flex;
    white-space: nowrap;
    animation: scroll 30s linear infinite;
    align-items: center;
  }

  @keyframes scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  .scroll-container:hover .scroll-content {
    animation-play-state: paused;
  }
</style>
